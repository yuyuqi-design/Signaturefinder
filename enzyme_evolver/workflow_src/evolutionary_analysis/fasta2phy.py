#Copyright (c) 2020 Dr.Yuqi Yu, Nigel Scrutton Group, Manchester Institute of Biotechnology, The University of Manchester, UK
# email to: yuqi.yu@manchester.ac.uk or yuyuqihappy@gmail.com
####################################################################################################################################################################
#function: change the sequence alignment fasta file from gblocks to phy format     
#Input: seqeunce alignment file: hit_refine_muscle.fasta-gb. rows of alignmnet block                                                                                                                   
#Usage: python3 fastaToPhy.py hit_refine_muscle.fasta-gb 4
#output: file.txt_replaced
#####################################################################################################################################################################

import subprocess as sp
import pandas as pd 
import csv
import sys

def fasta2phy(fasta, folder):
    #convert.sh is a shell script for converting fasta to phy, but it is not perfect, the name of each sequence is not 10 characters required by phylip format
    #we name the output file of convert.sh as temp.phy
# '''    convert = './convert.sh ' + fasta + ' > temp.phy'
#     sp.run(convert, shell=True)
#     #read the first line of temp.phy which is the number of sequences and length of the alignmnet
#     infile = open('temp.phy', 'r')
#     title = infile.readline()
#     infile.close()
#     #read the sequences in temp.phy generated by convert.sh
#     df = pd.read_csv('temp.phy', skiprows=1,delim_whitespace=True, names=['sequence_name', 'sequence'])'''
    with open(fasta) as fa:
        fasta = fa.readlines()
        nrow = []
        for line in fasta:
            if line.startswith('>'):
                seq_start_index = fasta.index(line)
                if len(nrow) < 2:
                    nrow.append(seq_start_index)
                else:
                    break
        align_nrow = int(nrow[1]) - int(nrow[0]) - 1

        sequence_name = []
        sequence = []
        for line in fasta:
            if line.startswith('>'):
                seq_start_index = fasta.index(line)
                sequence_name.append(line.split('>')[1].strip())
                seq_end_index = seq_start_index + align_nrow + 1
                seq = fasta[seq_start_index+1: seq_end_index]
                # print(seq)
                seq_join = ' '.join(seq).replace("\n", " ").replace(' ','')
                # print(len(seq_join))
                sequence.append(seq_join)
    df = pd.DataFrame(list(zip(sequence_name, sequence)), columns =['sequence_name','sequence']) 
    #how many sequences?
    total_nu = len(df)
    align_len = len(df.loc[1,'sequence'].strip())
    #change the name of each sequence: eg. seq1, seq300... and format it as 12 character length
    df['seqnumber'] = ['{:12s}'.format('seq' + str(x))for x in range(total_nu)]
    #keep a record the the change and save it as temp2.phy
    df[['seqnumber', 'sequence_name', 'sequence']].to_csv(folder+'temp2.phy',index=False)
    #dump modified phy file to out.phy
    df[['seqnumber','sequence']].to_csv(folder+'homologous_sequences90_muscle.phy', index=False,sep=' ',quoting=csv.QUOTE_NONE, quotechar="",  escapechar=" ")
    # add 'sequence_number alignment_length' as first line required by phylip format
    #and copy the out.phy as infile which is the default input filename in phylip proml tree generation
    title = str(total_nu) + ' ' + str(align_len)
    add_title = 'sed -i ' + '\"s/seqnumber sequence/' + title + '/\"' + ' '+ folder + 'homologous_sequences90_muscle.phy'
    sp.run(add_title, shell=True)
    # fphy = open('temp3.phy')
    # outphy = fphy.read()
    # fphy2 = open('out.phy','w')
    # fphy2.write(title + outphy)
    # fphy.close()
    # fphy2.close()

if __name__ == '__main__':
    fasta = sys.argv[1]
    folder = sys.argv[2]
    fasta2phy(fasta, folder)


